/*
Name: Toeplitz Matrix
Problem Statement:
Given an m x n matrix, return true if the matrix is Toeplitz. Otherwise, return false.
A matrix is Toeplitz if every diagonal from top-left to bottom-right has the same elements.
Example 1:
Input: matrix = [[1,2,3,4],[5,1,2,3],[9,5,1,2]]
Output: true
Explanation:
In the above grid, the diagonals are:
"[9]", "[5, 5]", "[1, 1, 1]", "[2, 2, 2]", "[3, 3]", "[4]".
In each diagonal all elements are the same, so the answer is True.
*/
class Solution {
public:
    bool isToeplitzMatrix(vector<vector<int>>& matrix)
    {
        int m = matrix.size();
        if(!m)
            return true;

        int n = matrix[0].size();
        int totalLanes = m + n - 1, startLane = m - 1;

        while(totalLanes--)
        {
            int i = startLane < 0 ? 0 : startLane;
            int j = startLane < 0 ? abs(startLane) : 0;

            while(i < (m - 1) && j < (n - 1))
            {
                if(matrix[i + 1][j + 1] != matrix[i][j])
                    return false;

                i++;
                j++;
            }
            startLane--;
        }
        return true;
    }
};
