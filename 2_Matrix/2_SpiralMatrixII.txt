/*
Name: Spiral Matrix II
Problem Statement:
Given a positive integer n, generate an n x n matrix filled with elements from 1  to nÂ² in spiral order.
Example 1:
Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]
*/

class Solution {
public:
    vector<vector<int>> generateMatrix(int n)
    {
        vector<vector<int>> output;

        for(int i = 0; i < n; i++)
        {
            vector<int> v;

            for(int j = 0; j < n; j++)
                v.push_back(0);

            output.push_back(v);
        }
        int l1 = 0, l2 = 0, r1 = n - 1, r2 = n - 1, direction = 0, counter = 1;

        while((n * n) >= counter)
        {
            switch(direction)
            {
                case 0:
                        for(int i = l2; i <= r1; i++)
                            output[l1][i] = counter++;
                        l1++;
                        break;

                case 1:
                        for(int i = l1; i <= r2; i++)
                            output[i][r1] = counter++;
                        r1--;
                        break;

                case 2:
                        for(int i = r1; i >= l2; i--)
                            output[r2][i] = counter++;
                        r2--;
                        break;

                case 3:
                        //cout<<r2<<":"<<l2<<">";
                        for(int i = r2; i >= l1; i--)
                            output[i][l2] = counter++;
                        l2++;
                        break;
            }

            direction = (direction + 1) % 4;
        }
        return output;
    }
};
//leetcode submit region end(Prohibit modification and deletion)
