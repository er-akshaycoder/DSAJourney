/*
Name: Max Consecutive Ones III
Problem Statement:
Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip
at most k 0's.

Example 1:
Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6

Method: Sliding Window

*/
class Solution {
public:
    int longestOnes(vector<int>& nums, int k)
    {
        int n = nums.size(), zero = 0, start = 0, maxLen = 0, flag = 0;

        for(int i = 0; i < n; i++)
        {
            if(!nums[i])
                k -= 1;

            while(k < 0)
            {
                if(!nums[start])
                    k += 1;
                start += 1;
            }
            maxLen = max(maxLen, i - start + 1);
        }

        return maxLen;
    }
};
