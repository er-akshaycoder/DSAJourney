/*
Name: Compare Version Numbers
Statement:
    [Read problem statement from leetcode site].

Return the following:
    If version1 < version2, return -1.
    If version1 > version2, return 1.
    Otherwise, return 0.

Example 1:
    Input: version1 = "1.01", version2 = "1.001"
    Output: 0
    Explanation: Ignoring leading zeroes, both "01" and "001" represent the same
    integer "1".

Example 2:
    Input: version1 = "7.5.3", version2 = "7.5.2.5"
    Output: 1

Method 1: Splitting
    1. Split two string by '.' and compare elements

Method 2: Splitting
    1. Append '.' for to string to make calculation easier.
    2. Whenever '.' encounter in anyone, just form the digits for both string till that '.';

Implementation:
class Solution {
public:
    int getStatus(string digit1, string digit2)
    {
        if(stoi(digit1) > stoi(digit2))
            return 1;
        else
        {
            if(stoi(digit1) < stoi(digit2))
                return -1;
        }

        return 0;
    }
    int compareVersion(string version1, string version2)
    {
        version1 += '.';
        version2 += '.';
        int n1 = version1.size();
        int n2 = version2.size();
        int i = 0, j = 0;
        string digit1 = "";
        string digit2 = "";

        while(i < n1 && n2 > j)
        {
            if(version1[i] == '.' || version2[j] == '.')
            {
                while(version1[i] != '.')
                {
                    digit1 += version1[i];
                    i++;
                }
                while(version2[j] != '.')
                {
                    digit2 += version2[j];
                    j++;
                }
                int status = getStatus(digit1, digit2);
                if(status != 0)
                    return status;
                else
                {
                    digit1 = "";
                    digit2 = "";
                }
            }
            else
            {
                digit1 += version1[i];
                digit2 += version2[j];
            }
            i++;
            j++;
        }

        while(i < n1)
        {
            if(version1[i] == '.')
            {
                if(digit2 == "")
                    digit2 += '0';
                int status = getStatus(digit1, digit2);
                if(status != 0)
                    return status;
                else
                {
                    digit1 = "";
                    digit2 = "";
                }
            }
            else
                digit1 += version1[i];
            i++;
        }
        while(j < n2)
        {
            if(version2[j] == '.')
            {
                if(digit1 == "")
                    digit1 += '0';
                int status = getStatus(digit1, digit2);
                if(status != 0)
                    return status;
                else
                {
                    digit1 = "";
                    digit2 = "";
                }
            }
            else
                digit2 += version2[j];
            j++;
        }

        return 0;
    }
};
*/