/*
Name: Bag of Tokens
Statement:
You have an initial power of power, an initial score of 0, and a bag of tokens where tokens[i] is the value of the iᵗʰ
token (0-indexed).
Your goal is to maximize your total score by potentially playing each token in one of two ways:
    1. If your current power is at least tokens[i], you may play the iᵗʰ token face up, losing tokens[i] power and
       gaining 1 score.
    2. If your current score is at least 1, you may play the iᵗʰ token face down, gaining tokens[i] power and losing 1
       score.

Each token may be played at most once and in any order. You do not have to play all the tokens.
Return the largest possible score you can achieve after playing any number of tokens.

Example 1:
Input: tokens = [100,200,300,400], power = 200
Output: 2
Explanation: Play the tokens in this order to get a score of 2:
1. Play the 0ᵗʰ token (100) face up, your power becomes 100 and score becomes 1.
2. Play the 3ʳᵈ token (400) face down, your power becomes 500 and score becomes 0.
3. Play the 1ˢᵗ token (200) face up, your power becomes 300 and score becomes 1.
4. Play the 2nd token (300) face up, your power becomes 0 and score becomes 2.

Example 2:
Input: tokens = [100,200,300,150, 350, 400], power = 400
Output: 2
Explanation: Play the tokens in this order to get a score of 2:
1. Increase score by 1 and subtract 100 from power. [score = 1, power = 300]
2. Increase score by 1 and subtract 200 from power. [score = 2, power = 150]
3. Decrease score by 1 and Add 300 to power. [score = 1, power = 550]
4. Increase score by 1 and subtract 300 from power. [score = 2, power = 250]
5. Increase score by 1 and subtract 150 from power. [score = 3, power = 100]

Note: Don't consider 350 for subtraction because, there is no chance of increase score.

1. Method: Sorting
    1. Sort the array in ascending order.
    2. Use two pointers, one for increasing score and another for increasing power.
    3. First pointer will points to first element and second to last element.

*/
// Solution:
class Solution {
public:
    int bagOfTokensScore(vector<int>& tokens, int power)
    {
        int answer = 0, i = 0, j = tokens.size() - 1;;

        sort(tokens.begin(), tokens.end());
        while(i <= j)
        {
            if(power >= tokens[i])
            {
                answer += 1;
                power -= tokens[i];
                i += 1;
            }
            else
            {
                if(answer > 0 && i + 1 < j)
                {
                    answer -= 1;
                    power += tokens[j];
                    j -= 1;
                }
                else
                    break;
            }
        }
        return answer;
    }
};
