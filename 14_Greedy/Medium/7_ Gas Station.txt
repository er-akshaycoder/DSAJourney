/*
Name: Gas Station
Statement:
There are n gas stations along a circular route, where the amount of gas at the iᵗʰ station is gas[i].

You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from the iᵗʰ station to its next
(i + 1)ᵗʰ station. You begin the journey with an empty tank at one of the gas stations.

Given two integer arrays gas and cost, return the starting gas station's index if you can travel around the circuit once
in the clockwise direction, otherwise return -1. If there exists a solution, it is guaranteed to be unique

Example 1:
Input: gas = [1,2,3,4,5], cost = [3,4,5,1,2]
Output: 3
Explanation:
Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4
Travel to station 4. Your tank = 4 - 1 + 5 = 8
Travel to station 0. Your tank = 8 - 2 + 1 = 7
Travel to station 1. Your tank = 7 - 3 + 2 = 6
Travel to station 2. Your tank = 6 - 4 + 3 = 5
Travel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.
Therefore, return 3 as the starting index.

1. Method: Queue
    1. Push the index from star to end into queue until currentCapacity is negative (gas[i] - cost[i]).
    2. If yes, Just deque that element until the currentCapacity becomes positive.

2. Method: Greedy
    1. Few Observations:
        1. If total sum of their differences for all is negative, then there won't be the answer.
        2. At index before answer's index, Last minimum sum will be there as answer's index will contribute more.
    2. If there is negative sum, then first index will be answer's index.

*/
// Solution:
class Solution {
public:
    int canCompleteCircuit(vector<int>& gas, vector<int>& cost)
    {
        int totalSum = 0, minDiff = 0, index = 0;

        for(int i = 0; i < gas.size(); i++)
        {
            totalSum += gas[i] - cost[i];
            if(totalSum < minDiff)
            {
                minDiff = totalSum;
                index = i + 1;
            }
        }

        if(totalSum < 0)
            return -1;

        return gas.size() == index ? 0 : index;
    }
};
