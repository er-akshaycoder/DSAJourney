/*
Name: Lemonade Change
Statement:
At a lemonade stand, each lemonade costs $5. Customers are standing in a queue to buy from you and order one at a time
(in the order specified by bills). Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill.
You must provide the correct change to each customer so that the net transaction is that the customer pays $5.
Note that you do not have any change in hand at first.
Given an integer array bills where bills[i] is the bill the iᵗʰ customer pays, return true if you can provide every
customer with the correct change, or false otherwise.

Example 1:
Input: bills = [5,5,5,10,20]
Output: true
Explanation:
From the first 3 customers, we collect three $5 bills in order.
From the fourth customer, we collect a $10 bill and give back a $5.
From the fifth customer, we give a $10 bill and a $5 bill.
Since all customers got correct change, we output true.

1. Method: Simple-Efficient
    1. Handle each bills[i] separately
    2. For 5, increment 5 coins variable.
    3. For 10, increment 10 coins variable and check if number of 5 coins are available.
    4. For 15, check if number of 10 coins are available and then check for 5 coins are available.
*/
class Solution {
public:
    bool lemonadeChange(vector<int>& bills)
    {
        int fiveRSCoins = 0, tenRSCoins = 0;

        for(int i = 0; i < bills.size(); i++)
        {
            if(bills[i] == 5)
                fiveRSCoins += 1;
            else
            {
                int req = (bills[i] - 5) / 5;
                if(bills[i] == 10)
                    tenRSCoins += 1;
                else
                {
                    if(tenRSCoins)
                    {
                        req -= 2;
                        tenRSCoins -= 1;
                    }
                }
                if(fiveRSCoins >= req)
                    fiveRSCoins = fiveRSCoins - req;
                else
                    return false;
            }
        }

        return true;
    }
};

